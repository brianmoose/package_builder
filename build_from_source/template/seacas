#!/bin/bash
#############
## Specifics
##
DEP=(modules gcc cmake)
PACKAGE='seacas'

#####
# Set the operating system allowed to build this module
#
ARCH=(Darwin Linux)

#####
# Setting any of these variables to 'false' effectively skips that step
# This is useful for items like 'autojump' which requires a git clone/checkout
DOWNLOAD='false'
EXTRACT='false'
CONFIGURE="false"
BUILD='false'
INSTALL='false'

pre_run() {
    cd "$PACKAGES_DIR"
    if [ -d seacas ]; then rm -rf seacas; fi
    try_command 3 "git clone https://github.com/milljm/seacas.git"
    cd seacas
    # Updated external repository, adding this comment to trigger a change
    # (build netcdf with X11 support to allow blot to be built)
    git checkout jasons_installer
    if [ $? -ne 0 ]; then echo "Failed to checkout branch"; cleanup 1; fi
    cd contrib
    export ACCESS="$PACKAGES_DIR/seacas"
    ./download_and_configure_prereqs.sh
    if [ $? -ne 0 ]; then echo "Failed to build SEACAS"; cleanup 1; fi
}
post_run() {
    return
}
##
## End Specifics
##############
## The following script contains all the common functions.
## Those functions are executed in the following order:

# download
# extract
# pre-run
# configure
# make
# make install
# post_run
# cleanup

## pre_run and post_run are the only true specifics that are different
## with every package
export PACKAGES_DIR="<PACKAGES_DIR>"
RELATIVE_DIR="<RELATIVE_DIR>"
DOWNLOAD_DIR="<DOWNLOAD_DIR>"
TEMP_PREFIX="<TEMP_PREFIX>"
export MOOSE_JOBS=<MOOSE_JOBS>
KEEP_FAILED=<KEEP_FAILED>
source "$RELATIVE_DIR/functions" $@
